Архитектура моего приложения:

1. **Установите зависимости:**

   ```bash
   npm install
   ```

2. **Для запуска проекта воспользуйтесь**

   ```bash
   npm run dev
   ```

   Проект будет доступен по адресу [http://localhost:5173](http://localhost:5173) (порт может отличаться, смотрите вывод в консоли).

3. **Сборка проекта:**

   ```bash
   npm run build
   ```

4. **Просмотр production-сборки:**

   ```bash
   npm run preview
   ```

5. ** Форматирование:**

   ```bash
   npm run format
   ```

> ⚠️ Для корректной работы необходим запущенный backend на `http://localhost:3000` (эндпоинты `/aggregate` и `/report`).

---

## Описание архитектуры

Проект реализован на **React** с использованием **TypeScript** и менеджера состояния **Zustand**. Сборка и запуск осуществляются через **Vite**.

### Основные страницы:

-MainPage('/')
-GeneratorPage('/generator')
-HistoryPage('/history')

### Основные компоненты:

- Layout - Для отображения  шапки сайта и навигации.
- LoadFileArea/GalacticList - Для отображения поля и инпута для добавления файла и сфомировавщейся статистики.
- HistoryList - Для отображения истории.
- Вспомогательные компонеты для отображения UI.

### Состояние приложения:

- **Zustand** хранит информация о статистике и истории
- **История** хранится в `localStorage` через сервис `LocalStorageService`.

### Взаимодействие с localStorage и Backend 
- Запросы описаны в папке api 
- Компоненты взаимодействуют в очередности: component -> store -> services -> api



